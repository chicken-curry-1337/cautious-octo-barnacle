import { useMemo } from 'react';
import { observer } from 'mobx-react-lite';
import styles from './CandidateList.module.css';
import { GuildStore, type HeroType } from '../../entities/Guild/Guild.store';
import { container } from 'tsyringe';

const typeEmojis: Record<string, string> = {
  warrior: 'üõ°Ô∏è',
  mage: 'ü™Ñ',
  rogue: 'üó°Ô∏è',
};

const CandidateList = observer(() => {
  const guildStore = useMemo(() => container.resolve(GuildStore), []);
  
  function getDescriptionClass(type: HeroType) {
    switch (type) {
        case 'warrior':
        return 'descWarrior';
        case 'mage':
        return 'descMage';
        case 'rogue':
        return 'descRogue';
        default:
        return '';
    }
    }

  if (guildStore.candidates.length === 0) return <p>–ù–æ–≤—ã—Ö –≥–µ—Ä–æ–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.</p>;

  return (
    <div className={styles.list}>
      <h3>–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –Ω–∞ –Ω–∞–π–º</h3>
      {guildStore.candidates.map(hero => (
        <div key={hero.id} className={styles.card}>
          <div>
            <strong>{hero.name}</strong> (—É—Ä. {hero.level}) ‚Äî <em>{typeEmojis[hero.type]} {hero.type}</em> ‚Äî –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ {hero.daysRemaining} –¥–Ω.
          </div>
          <div className="stats">
            üí™ {hero.strength} | üéØ {hero.agility} | üß† {hero.intelligence}
          </div>
          <p className={styles[getDescriptionClass(hero.type)]}>
            {hero.description}
        </p>

          <button onClick={() => guildStore.hireCandidate(hero.id)} className={styles.hire}>
            –ù–∞–Ω—è—Ç—å
          </button>
        </div>
      ))}
    </div>
  );
});

export default CandidateList;
